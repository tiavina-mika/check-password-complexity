# --------------------------------------------------- #
# doc: https://github.com/TriPSs/conventional-changelog-action
# tuto: https://nanthakumaran.medium.com/how-to-automate-releases-and-publish-packages-to-npm-using-github-actions-910d5128c0fa
# npm token + github action: https://taozhi.medium.com/publish-package-to-npm-and-gpr-with-github-actions-e05793f72455
# --------------------------------------------------- #

name: Releases
run-name: ${{ github.actor }} releases ðŸš€

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
  status: {}
  pull_request_review:
    types:
      - submitted
  check_suite:
    types:
      - completed
  workflow_dispatch:
    inputs:
      pullRequestNumber:
        description: Pull request number to auto-approve
        required: false

permissions:
  contents: write
  packages: write
  pull-requests: write

env:
  APP_NAME: check-password-complexity

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # need this for using yarn v4
      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn

      - name: Lint
        run: yarn lint

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # need this for using yarn v4
      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn

      - name: Test
        run: yarn test:coverage

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # need this for using yarn v4
      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build

  changelog:
    name: Changelog
    needs:
      - lint
      - test
      - build
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest

    outputs:
      skipped: ${{ steps.changelog.outputs.skipped }}
      tag: ${{ steps.changelog.outputs.tag }}
      clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}
      version: ${{ steps.changelog.outputs.version }}

    env:
      PR_BRANCH: release-ci-${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Branch
        run: |
          git checkout -b ${{ env.PR_BRANCH }}

      - name: Create Changelog
        uses: TriPSs/conventional-changelog-action@v5
        id: changelog
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          git-user-name: "github-actions[bot]"
          git-user-email: "github-actions[bot]@users.noreply.github.com"
          git-branch: ${{ env.PR_BRANCH }}
          skip-git-pull: true
                    # this will update the version in package.json
          # and therefore the npm package version
          version-file: './package.json'
          create-summary: true

      - run: echo "1. skipped = ${{ steps.changelog.outputs.skipped }}, tag = ${{ steps.changelog.outputs.tag }}, clean_changelog = ${{ steps.changelog.outputs.clean_changelog }}, version = ${{ steps.changelog.outputs.version }}"
      - run: echo "2. PR_BRANCH = ${{ env.PR_BRANCH }}"

      - name: Create Changelog PR
        if: steps.changelog.outputs.skipped == 'false'
        run: |
          gh pr create --base main --head ${{ env.PR_BRANCH }} --title 'chore(release): ${{ steps.changelog.outputs.tag }} [skip-ci]' --body '${{ steps.changelog.outputs.clean_changelog }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_OWNER_TOKEN }}

      - run: echo "3. skipped = ${{ steps.changelog.outputs.skipped }}"

    # autoapprove:
    #   if: ${{ github.event.label.name == 'automerge' }}
    #   runs-on: ubuntu-latest
    #   permissions:
    #     pull-requests: write
    #   steps:
      - uses: hmarr/auto-approve-action@v4
        with:
          review-message: "Auto approve sync PRs to auto merge them"
          pull-request-number: ${{ github.event.inputs.pullRequestNumber }}

    # automerge:
    #   needs: [autoapprove]
    #   runs-on: ubuntu-latest
    #   steps:
      # - id: automerge
      #   name: automerge
      #   uses: "pascalgn/automerge-action@v0.16.3"
      #   env:
      #     GITHUB_TOKEN: "${{ secrets.GH_TOKEN }}"
      #     MERGE_LABELS: "!x"
      #     UPDATE_LABELS: ""
      #     MERGE_DELETE_BRANCH: true
      #     MERGE_RETRIES: "10"
      #     MERGE_RETRY_SLEEP: "5000"
      #     MERGE_REQUIRED_APPROVALS: "0"

      # - name: feedback
      #   if: ${{ steps.automerge.outputs.mergeResult == 'merged' }}
      #   run: |
      #     echo "Pull request ${{ steps.automerge.outputs.pullRequestNumber }} merged!"

      # - name: Approve Changelog PR
      #   if: steps.changelog.outputs.skipped == 'false'
      #   run: |
      #     gh pr review --approve ${{ env.PR_BRANCH }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      # - run: echo "4. Approve Changelog PR skipped = ${{ steps.changelog.outputs.skipped }}"

      - name: Merge Changelog PR
        if: steps.changelog.outputs.skipped == 'false'
        run: |
          gh pr merge --squash --auto --delete-branch ${{ env.PR_BRANCH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - run: echo "5. Merge Changelog PR skipped = ${{ steps.changelog.outputs.skipped }}"

  release:
    name: Release
    needs: changelog
    if: github.event_name != 'pull_request' && needs.changelog.outputs.skipped == 'false'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: echo "6. github event = ${{ github.event_name }}"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag_name: ${{ needs.changelog.outputs.tag }}
          prerelease: false
          draft: false
          files: README.md
          generate_release_notes: true
          name: ${{ needs.changelog.outputs.tag }}
          body: |
            <details>
              <summary>ðŸ¤– Autogenerated Conventional Changelog</summary>

            ${{ needs.changelog.outputs.clean_changelog }}
            </details>
