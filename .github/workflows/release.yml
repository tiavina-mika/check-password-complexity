# --------------------------------------------------- #
# doc: https://github.com/TriPSs/conventional-changelog-action
# tuto: https://nanthakumaran.medium.com/how-to-automate-releases-and-publish-packages-to-npm-using-github-actions-910d5128c0fa
# npm token + github action: https://taozhi.medium.com/publish-package-to-npm-and-gpr-with-github-actions-e05793f72455
# --------------------------------------------------- #

name: Releases
run-name: ${{ github.actor }} releases ðŸš€

on:
  push:
    branches:
      - main

jobs:
  changelog:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # # need this for using yarn
      # - name: Enable Corepack
      #   run: corepack enable

      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: '20.x'
      #     registry-url: 'https://registry.npmjs.org'
      #     # instead of using the local cache in .yarn folder, since it's in .gitignore
      #     cache: 'yarn'

      # - name: Replace branch name in branches array
      #   run: sed -i 's|'current-branch'|'${{ github.ref_name }}'|' .releaserc

      # - name: Install dependencies
      #   run: yarn

      # for Yarn v1, use `yarn publish` instead
      # - run: yarn npm publish // if using yarn
      # - name: Release
      #   env:
      #     # this will be used in .yarnrc.yml
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      #   run: npx semantic-release
      - name: Conventional Changelog Action
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          version-file: './package.json'
      - name: create release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
